plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    namespace 'com.jiaoay.api'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    api("com.squareup.retrofit2:retrofit:2.9.0")

    api("com.squareup.okhttp3:okhttp:4.10.0")
    api("com.squareup.okhttp3:logging-interceptor:4.10.0")
    api("com.squareup.okhttp3:okhttp-brotli:4.10.0")
    api("com.squareup.okhttp3:okhttp-dnsoverhttps:4.10.0")

    api("com.squareup.moshi:moshi:1.13.0")
    api("com.squareup.moshi:moshi-adapters:1.13.0")
    api("com.squareup.moshi:moshi-kotlin:1.13.0")
    api("com.squareup.retrofit2:converter-moshi:2.9.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.13.0")

    def parent = getProject().getParent()
    String parentPath = ""
    if (parent != null) {
        parentPath = parent.path
    }
    compileOnly(project(parentPath + ":common"))
}
